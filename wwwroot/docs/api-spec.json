{
  "openapi": "3.0.3",
  "info": {
    "title": "Pocket Board Finance API",
    "description": "API REST pour l'application de gestion financière personnelle Pocket Board Finance. Développée par Florian Anthony en 2024.",
    "version": "1.0.0",
    "contact": {
      "name": "Florian Anthony",
      "url": "https://linkedin.com/in/florian-anthony",
      "email": "contact@pocketboardfinance.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.pocketboardfinance.com",
      "description": "Serveur de production"
    },
    {
      "url": "https://api-dev.pocketboardfinance.com",
      "description": "Serveur de développement"
    },
    {
      "url": "http://localhost:5000",
      "description": "Serveur local"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentification et gestion des utilisateurs"
    },
    {
      "name": "Accounts",
      "description": "Gestion des comptes financiers"
    },
    {
      "name": "Transactions",
      "description": "Gestion des transactions"
    },
    {
      "name": "Statistics",
      "description": "Statistiques et analyses financières"
    },
    {
      "name": "Export",
      "description": "Export de données"
    },
    {
      "name": "Health",
      "description": "Santé de l'API"
    }
  ],
  "paths": {
    "/api/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Vérifier l'état de l'API",
        "description": "Endpoint de santé pour vérifier que l'API fonctionne correctement",
        "responses": {
          "200": {
            "description": "API opérationnelle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Inscription d'un nouvel utilisateur",
        "description": "Créer un nouveau compte utilisateur",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Données invalides",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email déjà utilisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Connexion utilisateur",
        "description": "Authentifier un utilisateur et retourner un token JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Identifiants invalides",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Déconnexion utilisateur",
        "description": "Invalider le token de l'utilisateur connecté",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Déconnexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Récupérer tous les comptes",
        "description": "Obtenir la liste de tous les comptes de l'utilisateur connecté",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Liste des comptes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Non authentifié",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Accounts"],
        "summary": "Créer un nouveau compte",
        "description": "Ajouter un nouveau compte financier",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Compte créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Données invalides",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non authentifié",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{id}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Récupérer un compte par ID",
        "description": "Obtenir les détails d'un compte spécifique",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID du compte",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du compte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "404": {
            "description": "Compte non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Accounts"],
        "summary": "Modifier un compte",
        "description": "Mettre à jour les informations d'un compte",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID du compte",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Compte modifié avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "404": {
            "description": "Compte non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Accounts"],
        "summary": "Supprimer un compte",
        "description": "Supprimer définitivement un compte",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID du compte",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compte supprimé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Compte non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Récupérer toutes les transactions",
        "description": "Obtenir la liste de toutes les transactions de l'utilisateur avec filtres optionnels",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Filtrer par ID de compte",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filtrer par catégorie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filtrer par type (income/expense)",
            "schema": {
              "type": "string",
              "enum": ["income", "expense"]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Date de début (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date de fin (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Transactions"],
        "summary": "Créer une nouvelle transaction",
        "description": "Ajouter une nouvelle transaction financière",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/{id}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Récupérer une transaction par ID",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de la transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Transactions"],
        "summary": "Modifier une transaction",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction modifiée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "Supprimer une transaction",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction supprimée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Récupérer les statistiques financières",
        "description": "Obtenir les statistiques et analyses financières de l'utilisateur",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Période d'analyse",
            "schema": {
              "type": "string",
              "enum": ["week", "month", "quarter", "year"],
              "default": "month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistiques financières",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/export/excel": {
      "get": {
        "tags": ["Export"],
        "summary": "Exporter les données en Excel",
        "description": "Télécharger toutes les données utilisateur au format Excel",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Fichier Excel généré",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/export/csv": {
      "get": {
        "tags": ["Export"],
        "summary": "Exporter les données en CSV",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Fichier CSV généré",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT obtenu lors de la connexion"
      }
    },
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password", "firstName", "lastName"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "SecurePassword123!"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "SecurePassword123!"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "expiresIn": {
            "type": "integer",
            "example": 3600
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Compte Courant"
          },
          "type": {
            "type": "string",
            "enum": ["checking", "savings", "credit", "investment", "cash"],
            "example": "checking"
          },
          "balance": {
            "type": "number",
            "format": "decimal",
            "example": 1250.75
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          }
        }
      },
      "CreateAccountRequest": {
        "type": "object",
        "required": ["name", "type"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Compte Courant"
          },
          "type": {
            "type": "string",
            "enum": ["checking", "savings", "credit", "investment", "cash"],
            "example": "checking"
          },
          "balance": {
            "type": "number",
            "format": "decimal",
            "example": 0
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          }
        }
      },
      "UpdateAccountRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Compte Courant Mis à Jour"
          },
          "type": {
            "type": "string",
            "enum": ["checking", "savings", "credit", "investment", "cash"],
            "example": "checking"
          },
          "balance": {
            "type": "number",
            "format": "decimal",
            "example": 1500.25
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "accountId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": -45.50
          },
          "description": {
            "type": "string",
            "example": "Achat épicerie"
          },
          "category": {
            "type": "string",
            "example": "Alimentation"
          },
          "type": {
            "type": "string",
            "enum": ["income", "expense"],
            "example": "expense"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T14:30:00Z"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["épicerie", "essentiel"]
          }
        }
      },
      "CreateTransactionRequest": {
        "type": "object",
        "required": ["accountId", "amount", "description", "type"],
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": -45.50
          },
          "description": {
            "type": "string",
            "example": "Achat épicerie"
          },
          "category": {
            "type": "string",
            "example": "Alimentation"
          },
          "type": {
            "type": "string",
            "enum": ["income", "expense"],
            "example": "expense"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T14:30:00Z"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["épicerie", "essentiel"]
          }
        }
      },
      "UpdateTransactionRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": -50.00
          },
          "description": {
            "type": "string",
            "example": "Achat épicerie mis à jour"
          },
          "category": {
            "type": "string",
            "example": "Alimentation"
          },
          "type": {
            "type": "string",
            "enum": ["income", "expense"],
            "example": "expense"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T14:30:00Z"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["épicerie", "essentiel", "mise à jour"]
          }
        }
      },
      "Statistics": {
        "type": "object",
        "properties": {
          "totalBalance": {
            "type": "number",
            "format": "decimal",
            "example": 5420.75
          },
          "totalIncome": {
            "type": "number",
            "format": "decimal",
            "example": 3200.00
          },
          "totalExpenses": {
            "type": "number",
            "format": "decimal",
            "example": 1850.25
          },
          "savingsRate": {
            "type": "number",
            "format": "decimal",
            "example": 0.42
          },
          "categoryBreakdown": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "example": "Alimentation"
                },
                "amount": {
                  "type": "number",
                  "format": "decimal",
                  "example": 450.50
                },
                "percentage": {
                  "type": "number",
                  "format": "decimal",
                  "example": 0.24
                }
              }
            }
          },
          "balanceHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2024-01-01"
                },
                "balance": {
                  "type": "number",
                  "format": "decimal",
                  "example": 5000.00
                }
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Opération réussie"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Bad Request"
          },
          "message": {
            "type": "string",
            "example": "Les données fournies sont invalides"
          },
          "details": {
            "type": "object",
            "example": {
              "email": "L'email est requis"
            }
          }
        }
      }
    }
  }
}